---
// Simple, high-converting contact form for landing page
export interface Props {
  title?: string;
  subtitle?: string;
  showValue?: boolean;
}

const {
  title = "Get Your FREE Business Assessment",
  subtitle = "Discover $10K+ in hidden savings in your business",
  showValue = true
} = Astro.props;
---

<div class="contact-form-container bg-gradient-to-br from-gray-900/95 to-gray-800/95 border border-warning-400/30 rounded-2xl p-8 backdrop-blur-sm">
  <!-- Form Header -->
  <div class="text-center mb-8">
    {showValue && (
      <div class="inline-flex items-center gap-3 bg-green-500/10 border border-green-500/30 rounded-full px-4 py-2 mb-4">
        <div class="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div>
        <span class="text-sm font-medium text-green-400">FREE - Usually $500</span>
        <div class="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div>
      </div>
    )}
    
    <h2 class="text-2xl lg:text-3xl font-bold text-white mb-3">{title}</h2>
    <p class="text-gray-300">{subtitle}</p>
  </div>

  <!-- Simple Form -->
  <form action="/api/simple-lead" method="POST" class="space-y-4" id="contact-form">
    <!-- Loading State -->
    <div id="loading-state" class="hidden text-center py-8">
      <div class="inline-flex items-center gap-3 text-warning-400">
        <div class="animate-spin rounded-full h-6 w-6 border-2 border-warning-400 border-t-transparent"></div>
        <span>Submitting your request...</span>
      </div>
    </div>
    
    <!-- Success State -->
    <div id="success-state" class="hidden text-center py-8">
      <div class="inline-flex items-center gap-3 text-green-400 mb-4">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
        </svg>
        <span class="font-semibold">Thank you!</span>
      </div>
      <p class="text-gray-300">We'll be in touch within 24 hours to schedule your FREE assessment.</p>
    </div>
    
    <!-- Form Fields -->
    <div id="form-fields">
      <!-- Name & Email Row -->
      <div class="grid md:grid-cols-2 gap-4">
        <div>
          <label for="name" class="block text-sm font-medium text-gray-300 mb-2">Name *</label>
          <input
            type="text"
            id="name"
            name="name"
            required
            class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:border-warning-400 focus:ring-2 focus:ring-warning-400/20 transition-all"
            placeholder="Your full name"
          />
          <div class="error-message text-red-400 text-sm mt-1 hidden"></div>
        </div>
        
        <div>
          <label for="email" class="block text-sm font-medium text-gray-300 mb-2">Email *</label>
          <input
            type="email"
          id="email"
          name="email"
          required
          class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:border-warning-400 focus:ring-2 focus:ring-warning-400/20 transition-all"
          placeholder="your@email.com"
        />
      </div>
    </div>

    <!-- Phone & Service Row -->
    <div class="grid md:grid-cols-2 gap-4">
      <div>
        <label for="phone" class="block text-sm font-medium text-gray-300 mb-2">Phone</label>
        <input
          type="tel"
          id="phone"
          name="phone"
          class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:border-warning-400 focus:ring-2 focus:ring-warning-400/20 transition-all"
          placeholder="(555) 123-4567"
        />
      </div>
      
      <div>
        <label for="service" class="block text-sm font-medium text-gray-300 mb-2">Service Interest *</label>
        <select
          id="service"
          name="service"
          required
          class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-warning-400 focus:ring-2 focus:ring-warning-400/20 transition-all cursor-pointer"
        >
          <option value="">Select a service</option>
          <option value="QuickBooks Consulting">QuickBooks Consulting</option>
          <option value="Payroll Services">Payroll Services</option>
          <option value="Business Consulting">Business Consulting</option>
          <option value="Technology Consulting">Technology Consulting</option>
          <option value="HVAC/Electrical">HVAC/Electrical Consulting</option>
          <option value="Full Suite">Complete Modern Suite</option>
        </select>
      </div>
    </div>

    <!-- Message -->
    <div>
      <label for="message" class="block text-sm font-medium text-gray-300 mb-2">Tell us about your business *</label>
      <textarea
        id="message"
        name="message"
        required
        rows="4"
        class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:border-warning-400 focus:ring-2 focus:ring-warning-400/20 transition-all resize-none"
        placeholder="What challenges are you facing? What results are you looking for?"
      ></textarea>
    </div>

    <!-- Submit Button -->
    <button
      type="submit"
      class="w-full bg-warning-400 hover:bg-warning-300 text-black font-bold py-4 px-8 rounded-lg transition-all duration-300 hover:scale-105 focus:ring-4 focus:ring-warning-400/30 disabled:opacity-50 disabled:cursor-not-allowed"
      id="submit-btn"
    >
      <span id="submit-text">Get My FREE Assessment</span>
      <span id="submit-loading" class="hidden">Sending...</span>
    </button>

    <!-- Trust Signals -->
    <div class="text-center pt-4">
      <p class="text-sm text-gray-400">
        ✓ No spam, ever &nbsp;•&nbsp; ✓ Free consultation &nbsp;•&nbsp; ✓ Same-day response
      </p>
    </div>
  </form>
</div>

<script>
  // Enhanced form with better UX
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('contact-form') as HTMLFormElement;
    const loadingState = document.getElementById('loading-state');
    const successState = document.getElementById('success-state');
    const formFields = document.getElementById('form-fields');

    if (form && loadingState && successState && formFields) {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        // Clear previous errors
        const errorMessages = form.querySelectorAll('.error-message');
        errorMessages.forEach(msg => {
          msg.classList.add('hidden');
          msg.textContent = '';
        });

        // Validate form
        const formData = new FormData(form);
        const name = formData.get('name') as string;
        const email = formData.get('email') as string;
        const phone = formData.get('phone') as string;

        let hasErrors = false;

        // Name validation
        if (!name || name.trim().length < 2) {
          showError('name', 'Please enter a valid name');
          hasErrors = true;
        }

        // Email validation
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!email || !emailRegex.test(email)) {
          showError('email', 'Please enter a valid email address');
          hasErrors = true;
        }

        if (hasErrors) return;
        
        // Show loading state
        formFields.classList.add('hidden');
        loadingState.classList.remove('hidden');

        try {
          const response = await fetch('/api/simple-lead', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              name: name.trim(),
              email: email.trim(),
              phone: phone?.trim() || ''
            })
          });

          if (response.ok) {
            // Show success state
            loadingState.classList.add('hidden');
            successState.classList.remove('hidden');
            
            // Reset form after 4 seconds
            setTimeout(() => {
              form.reset();
              successState.classList.add('hidden');
              formFields.classList.remove('hidden');
            }, 4000);
          } else {
            throw new Error('Form submission failed');
          }
        } catch (error) {
          console.error('Form error:', error);
          // Hide loading and show form again
          loadingState.classList.add('hidden');
          formFields.classList.remove('hidden');
          
          // Show error message
          const errorDiv = document.createElement('div');
          errorDiv.className = 'text-red-400 text-sm text-center mt-4 p-3 bg-red-500/10 border border-red-500/30 rounded-lg';
          errorDiv.textContent = 'There was an error sending your message. Please try again or call us directly at (469) 534-3392.';
          formFields.appendChild(errorDiv);
          setTimeout(() => errorDiv.remove(), 5000);
        }
      });

      function showError(fieldName: string, message: string) {
        const field = form.querySelector(`[name="${fieldName}"]`) as HTMLInputElement;
        if (field) {
          field.classList.add('border-red-500');
          const errorDiv = field.parentNode?.querySelector('.error-message') as HTMLElement;
          if (errorDiv) {
            errorDiv.textContent = message;
            errorDiv.classList.remove('hidden');
          }
        }
      }

      // Clear error states on input
      const inputs = form.querySelectorAll('input, select, textarea');
      inputs.forEach(input => {
        input.addEventListener('input', function() {
          this.classList.remove('border-red-500');
          const errorMsg = this.parentNode?.querySelector('.error-message') as HTMLElement;
          if (errorMsg) {
            errorMsg.classList.add('hidden');
          }
        });
      });
    }
  });
            throw new Error('Form submission failed');
          }
        } catch (error) {
          console.error('Form error:', error);
          alert('There was an error sending your message. Please try again or call us directly at (469) 534-3392.');
        } finally {
          // Reset button state
          submitBtn.disabled = false;
          submitText.classList.remove('hidden');
          submitLoading.classList.add('hidden');
        }
      });
    }
  });
</script>

<style>
  .contact-form-container {
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  }

  /* Smooth focus transitions */
  input:focus, select:focus, textarea:focus {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(248, 214, 115, 0.15);
  }

  /* Loading animation */
  #submit-loading::after {
    content: '';
    display: inline-block;
    width: 16px;
    height: 16px;
    margin-left: 8px;
    border: 2px solid #000;
    border-radius: 50%;
    border-top-color: transparent;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    to { transform: rotate(360deg); }
  }
</style>
